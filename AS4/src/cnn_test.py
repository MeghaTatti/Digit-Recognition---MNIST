# -*- coding: utf-8 -*-
"""cnn_test

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1t1Mmz1eUVI8uKk9gZaEvgp3io4degiax
"""

#**Connecting to Google Drive**

from google.colab import drive
drive.mount('/content/drive')

import argparse
import cv2,time
import numpy as np
import sys
from scipy import misc
import matplotlib.pyplot as plt

#**Preprocessing the image**
def test(path):
  image=cv2.imread(path,1)	#reads the image path from console	
  pix_resol = cv2.resize(image, (28,28)) #resizing the image
  gray_scale = cv2.cvtColor(pix_resol,cv2.COLOR_BGR2GRAY) #converting to grayscale
  blurr = cv2.GaussianBlur(gray_scale,(3,3),0) #applying guassian blurr
  retval, threshold = cv2.threshold(blurr, 70, 255, cv2.THRESH_BINARY) #appyling threshold

  plt.subplot(121),plt.imshow(image),plt.title('Original')
  plt.xticks([]), plt.yticks([])
  plt.subplot(122),plt.imshow(threshold),plt.title('Preprocessed Image')
  plt.xticks([]), plt.yticks([])
  plt.show()#shows the original and preprocessed image in 2 separate windows

  #**Loading the model from Deliverable 1**
  from keras.models import load_model
  model = load_model('/content/drive/My Drive/apps/cnn.h5')
  
  #Classify and predict if odd/even
  threshold=np.reshape(threshold,(-1,28,28,1))
  predictions=model.predict_classes(threshold)
  label = ''
  label = "even" if predictions[0] %2 == 0 else "odd"
  print("The number is: ", label)
 
 #**Quit Function**
while True:
  path = input("\nPlease enter file path or press q for exit: ")
  if path == 'q':
       print("\n\nProgram Terminated")
       break
  else:
       test(path)
      
      
      
      #/content/drive/My Drive/apps/input/7.jpg
      #/content/drive/My Drive/apps/input/four.png
      #/content/drive/My Drive/apps/input/five.png